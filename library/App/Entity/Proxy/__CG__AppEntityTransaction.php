<?php

namespace App\Entity\Proxy\__CG__\App\Entity;

/**
 * THIS CLASS WAS GENERATED BY THE DOCTRINE ORM. DO NOT EDIT THIS FILE.
 */
class Transaction extends \App\Entity\Transaction implements \Doctrine\ORM\Proxy\Proxy
{
    private $_entityPersister;
    private $_identifier;
    public $__isInitialized__ = false;
    public function __construct($entityPersister, $identifier)
    {
        $this->_entityPersister = $entityPersister;
        $this->_identifier = $identifier;
    }
    /** @private */
    public function __load()
    {
        if (!$this->__isInitialized__ && $this->_entityPersister) {
            $this->__isInitialized__ = true;

            if (method_exists($this, "__wakeup")) {
                // call this after __isInitialized__to avoid infinite recursion
                // but before loading to emulate what ClassMetadata::newInstance()
                // provides.
                $this->__wakeup();
            }

            if ($this->_entityPersister->load($this->_identifier, $this) === null) {
                throw new \Doctrine\ORM\EntityNotFoundException();
            }
            unset($this->_entityPersister, $this->_identifier);
        }
    }

    /** @private */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    
    public function getId()
    {
        $this->__load();
        return parent::getId();
    }

    public function setId($_id)
    {
        $this->__load();
        return parent::setId($_id);
    }

    public function getType()
    {
        $this->__load();
        return parent::getType();
    }

    public function setType($_type)
    {
        $this->__load();
        return parent::setType($_type);
    }

    public function getAccount()
    {
        $this->__load();
        return parent::getAccount();
    }

    public function setAccount($_account)
    {
        $this->__load();
        return parent::setAccount($_account);
    }

    public function getCategory()
    {
        $this->__load();
        return parent::getCategory();
    }

    public function setCategory($_category)
    {
        $this->__load();
        return parent::setCategory($_category);
    }

    public function getAmount()
    {
        $this->__load();
        return parent::getAmount();
    }

    public function setAmount($_amount)
    {
        $this->__load();
        return parent::setAmount($_amount);
    }

    public function getDate()
    {
        $this->__load();
        return parent::getDate();
    }

    public function setDate($_date)
    {
        $this->__load();
        return parent::setDate($_date);
    }

    public function getNote()
    {
        $this->__load();
        return parent::getNote();
    }

    public function setNote($_note)
    {
        $this->__load();
        return parent::setNote($_note);
    }


    public function __sleep()
    {
        return array('__isInitialized__', '_id', '_amount', '_date', '_note', '_type', '_account', '_category');
    }

    public function __clone()
    {
        if (!$this->__isInitialized__ && $this->_entityPersister) {
            $this->__isInitialized__ = true;
            $class = $this->_entityPersister->getClassMetadata();
            $original = $this->_entityPersister->load($this->_identifier);
            if ($original === null) {
                throw new \Doctrine\ORM\EntityNotFoundException();
            }
            foreach ($class->reflFields AS $field => $reflProperty) {
                $reflProperty->setValue($this, $reflProperty->getValue($original));
            }
            unset($this->_entityPersister, $this->_identifier);
        }
        
    }
}